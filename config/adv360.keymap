#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE     &kp N1            &kp N2            &kp N3        &kp N4            &kp N5  &tog 0                                                                        &mo 1      &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB        &kp Q             &kp W             &kp E         &kp R             &kp T   &none                                                                         &none      &kp Y   &kp U      &kp I      &kp O     &kp P     &kp BSLH
&mo 2          &kp A             &kp S             &kp D         &kp F             &kp G   &none      &kp LCTRL          &kp LALT      &kp LGUI           &kp RCTRL      &mo 3      &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT      &kp Z             &kp X             &kp C         &kp V             &kp B                                 &kp HOME      &kp PG_UP                                    &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LG(SPACE)  &kp LEFT_CONTROL  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND          &kp SPACE  &kp RIGHT_COMMAND  &kp END       &kp RIGHT_CONTROL  &kp BACKSPACE  &kp ENTER          &kp EQUAL  &kp DOWN   &kp LBKT  &kp RBKT  &mo 0
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        navigation {
            bindings = <
&trans  &trans     &trans            &trans                &trans                 &trans      &trans                                         &trans  &trans      &trans           &trans             &trans     &trans  &trans
&trans  &kp GRAVE  &kp TILDE         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR  &trans                                         &trans  &trans      &trans           &kp MINUS          &trans     &trans  &trans
&trans  &trans     &kp LEFT_SHIFT    &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans      &trans  &trans  &trans      &trans  &trans     &trans  &kp LEFT    &kp DOWN         &kp UP             &kp RIGHT  &trans  &trans
&trans  &trans     &trans            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                      &trans      &trans                     &kp K_MUTE  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &trans     &trans  &trans
&trans  &trans     &kp LEFT_CONTROL  &kp LEFT_ALT          &kp LEFT_COMMAND                   &trans  &trans  &trans      &trans  &kp EQUAL  &trans              &trans           &trans             &trans     &trans  &trans
            >;
        };

        app {
            bindings = <
&none  &none          &none          &none          &none  &none          &none                                  &none  &none  &none  &none  &none  &none          &none
&none  &none          &none          &none          &none  &none          &none                                  &none  &none  &none  &none  &none  &kp LA(LS(P))  &none
&none  &kp LA(LS(A))  &kp LA(LS(S))  &kp LA(LS(D))  &none  &none          &none  &none  &none      &none  &none  &none  &none  &none  &none  &none  &none          &none
&none  &none          &none          &kp LA(LS(C))  &none  &kp LA(LS(B))                &none      &none                &none  &none  &none  &none  &none          &none
&none  &none          &none          &none          &none                 &none  &none  &none      &none  &none  &none         &none  &none  &none  &none          &none
            >;
        };
    };
};
